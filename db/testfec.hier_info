|FEC
clk_50mhz => PingPong_flag.CLK
clk_50mhz => finished_tail_flag.CLK
clk_50mhz => counter_shift_and_output[0].CLK
clk_50mhz => counter_shift_and_output[1].CLK
clk_50mhz => counter_shift_and_output[2].CLK
clk_50mhz => counter_shift_and_output[3].CLK
clk_50mhz => counter_shift_and_output[4].CLK
clk_50mhz => counter_shift_and_output[5].CLK
clk_50mhz => counter_shift_and_output[6].CLK
clk_50mhz => counter_shift_and_output[7].CLK
clk_50mhz => counter_shift_and_output[8].CLK
clk_50mhz => counter_shift_and_output[9].CLK
clk_50mhz => counter_shift_and_output[10].CLK
clk_50mhz => counter_shift_and_output[11].CLK
clk_50mhz => counter_shift_and_output[12].CLK
clk_50mhz => counter_shift_and_output[13].CLK
clk_50mhz => counter_shift_and_output[14].CLK
clk_50mhz => counter_shift_and_output[15].CLK
clk_50mhz => counter_shift_and_output[16].CLK
clk_50mhz => counter_shift_and_output[17].CLK
clk_50mhz => counter_shift_and_output[18].CLK
clk_50mhz => counter_shift_and_output[19].CLK
clk_50mhz => counter_shift_and_output[20].CLK
clk_50mhz => counter_shift_and_output[21].CLK
clk_50mhz => counter_shift_and_output[22].CLK
clk_50mhz => counter_shift_and_output[23].CLK
clk_50mhz => counter_shift_and_output[24].CLK
clk_50mhz => counter_shift_and_output[25].CLK
clk_50mhz => counter_shift_and_output[26].CLK
clk_50mhz => counter_shift_and_output[27].CLK
clk_50mhz => counter_shift_and_output[28].CLK
clk_50mhz => counter_shift_and_output[29].CLK
clk_50mhz => counter_shift_and_output[30].CLK
clk_50mhz => counter_shift_and_output[31].CLK
clk_50mhz => shift_reg2[0].CLK
clk_50mhz => shift_reg2[1].CLK
clk_50mhz => shift_reg2[2].CLK
clk_50mhz => shift_reg2[3].CLK
clk_50mhz => shift_reg2[4].CLK
clk_50mhz => shift_reg2[5].CLK
clk_50mhz => shift_reg[0].CLK
clk_50mhz => shift_reg[1].CLK
clk_50mhz => shift_reg[2].CLK
clk_50mhz => shift_reg[3].CLK
clk_50mhz => shift_reg[4].CLK
clk_50mhz => shift_reg[5].CLK
clk_50mhz => counter_buffer_input[0].CLK
clk_50mhz => counter_buffer_input[1].CLK
clk_50mhz => counter_buffer_input[2].CLK
clk_50mhz => counter_buffer_input[3].CLK
clk_50mhz => counter_buffer_input[4].CLK
clk_50mhz => counter_buffer_input[5].CLK
clk_50mhz => counter_buffer_input[6].CLK
clk_50mhz => counter_buffer_input[7].CLK
clk_50mhz => counter_buffer_input[8].CLK
clk_50mhz => counter_buffer_input[9].CLK
clk_50mhz => counter_buffer_input[10].CLK
clk_50mhz => counter_buffer_input[11].CLK
clk_50mhz => counter_buffer_input[12].CLK
clk_50mhz => counter_buffer_input[13].CLK
clk_50mhz => counter_buffer_input[14].CLK
clk_50mhz => counter_buffer_input[15].CLK
clk_50mhz => counter_buffer_input[16].CLK
clk_50mhz => counter_buffer_input[17].CLK
clk_50mhz => counter_buffer_input[18].CLK
clk_50mhz => counter_buffer_input[19].CLK
clk_50mhz => counter_buffer_input[20].CLK
clk_50mhz => counter_buffer_input[21].CLK
clk_50mhz => counter_buffer_input[22].CLK
clk_50mhz => counter_buffer_input[23].CLK
clk_50mhz => counter_buffer_input[24].CLK
clk_50mhz => counter_buffer_input[25].CLK
clk_50mhz => counter_buffer_input[26].CLK
clk_50mhz => counter_buffer_input[27].CLK
clk_50mhz => counter_buffer_input[28].CLK
clk_50mhz => counter_buffer_input[29].CLK
clk_50mhz => counter_buffer_input[30].CLK
clk_50mhz => counter_buffer_input[31].CLK
clk_50mhz => FEC_RAM_2PORTS:ram1.clock
clk_50mhz => input_state_reg~3.DATAIN
clk_100mhz => output_state_reg~1.DATAIN
reset => PingPong_flag.ACLR
reset => finished_tail_flag.ACLR
reset => counter_shift_and_output[0].ACLR
reset => counter_shift_and_output[1].ACLR
reset => counter_shift_and_output[2].ACLR
reset => counter_shift_and_output[3].ACLR
reset => counter_shift_and_output[4].ACLR
reset => counter_shift_and_output[5].ACLR
reset => counter_shift_and_output[6].ACLR
reset => counter_shift_and_output[7].ACLR
reset => counter_shift_and_output[8].ACLR
reset => counter_shift_and_output[9].ACLR
reset => counter_shift_and_output[10].ACLR
reset => counter_shift_and_output[11].ACLR
reset => counter_shift_and_output[12].ACLR
reset => counter_shift_and_output[13].ACLR
reset => counter_shift_and_output[14].ACLR
reset => counter_shift_and_output[15].ACLR
reset => counter_shift_and_output[16].ACLR
reset => counter_shift_and_output[17].ACLR
reset => counter_shift_and_output[18].ACLR
reset => counter_shift_and_output[19].ACLR
reset => counter_shift_and_output[20].ACLR
reset => counter_shift_and_output[21].ACLR
reset => counter_shift_and_output[22].ACLR
reset => counter_shift_and_output[23].ACLR
reset => counter_shift_and_output[24].ACLR
reset => counter_shift_and_output[25].ACLR
reset => counter_shift_and_output[26].ACLR
reset => counter_shift_and_output[27].ACLR
reset => counter_shift_and_output[28].ACLR
reset => counter_shift_and_output[29].ACLR
reset => counter_shift_and_output[30].ACLR
reset => counter_shift_and_output[31].ACLR
reset => shift_reg2[0].ACLR
reset => shift_reg2[1].ACLR
reset => shift_reg2[2].ACLR
reset => shift_reg2[3].ACLR
reset => shift_reg2[4].ACLR
reset => shift_reg2[5].ACLR
reset => shift_reg[0].ACLR
reset => shift_reg[1].ACLR
reset => shift_reg[2].ACLR
reset => shift_reg[3].ACLR
reset => shift_reg[4].ACLR
reset => shift_reg[5].ACLR
reset => counter_buffer_input[0].ACLR
reset => counter_buffer_input[1].ACLR
reset => counter_buffer_input[2].ACLR
reset => counter_buffer_input[3].ACLR
reset => counter_buffer_input[4].ACLR
reset => counter_buffer_input[5].ACLR
reset => counter_buffer_input[6].ACLR
reset => counter_buffer_input[7].ACLR
reset => counter_buffer_input[8].ACLR
reset => counter_buffer_input[9].ACLR
reset => counter_buffer_input[10].ACLR
reset => counter_buffer_input[11].ACLR
reset => counter_buffer_input[12].ACLR
reset => counter_buffer_input[13].ACLR
reset => counter_buffer_input[14].ACLR
reset => counter_buffer_input[15].ACLR
reset => counter_buffer_input[16].ACLR
reset => counter_buffer_input[17].ACLR
reset => counter_buffer_input[18].ACLR
reset => counter_buffer_input[19].ACLR
reset => counter_buffer_input[20].ACLR
reset => counter_buffer_input[21].ACLR
reset => counter_buffer_input[22].ACLR
reset => counter_buffer_input[23].ACLR
reset => counter_buffer_input[24].ACLR
reset => counter_buffer_input[25].ACLR
reset => counter_buffer_input[26].ACLR
reset => counter_buffer_input[27].ACLR
reset => counter_buffer_input[28].ACLR
reset => counter_buffer_input[29].ACLR
reset => counter_buffer_input[30].ACLR
reset => counter_buffer_input[31].ACLR
reset => output_state_reg~3.DATAIN
reset => input_state_reg~5.DATAIN
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => FEC_RAM_2PORTS:ram1.data_a[0]
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => Selector33.IN2
FEC_input_valid => FEC_RAM_2PORTS:ram1.wren_a
FEC_input_valid => process_0.IN1
FEC_input_valid => Selector32.IN1
FEC_output_data <= FEC_output_data.DB_MAX_OUTPUT_PORT_TYPE
FEC_output_valid <= FEC_encoder_out_valid.DB_MAX_OUTPUT_PORT_TYPE


|FEC|FEC_RAM_2PORTS:ram1
address_a[0] => altsyncram:altsyncram_component.address_a[0]
address_a[1] => altsyncram:altsyncram_component.address_a[1]
address_a[2] => altsyncram:altsyncram_component.address_a[2]
address_a[3] => altsyncram:altsyncram_component.address_a[3]
address_a[4] => altsyncram:altsyncram_component.address_a[4]
address_a[5] => altsyncram:altsyncram_component.address_a[5]
address_a[6] => altsyncram:altsyncram_component.address_a[6]
address_a[7] => altsyncram:altsyncram_component.address_a[7]
address_b[0] => altsyncram:altsyncram_component.address_b[0]
address_b[1] => altsyncram:altsyncram_component.address_b[1]
address_b[2] => altsyncram:altsyncram_component.address_b[2]
address_b[3] => altsyncram:altsyncram_component.address_b[3]
address_b[4] => altsyncram:altsyncram_component.address_b[4]
address_b[5] => altsyncram:altsyncram_component.address_b[5]
address_b[6] => altsyncram:altsyncram_component.address_b[6]
address_b[7] => altsyncram:altsyncram_component.address_b[7]
clock => altsyncram:altsyncram_component.clock0
data_a[0] => altsyncram:altsyncram_component.data_a[0]
data_b[0] => altsyncram:altsyncram_component.data_b[0]
wren_a => altsyncram:altsyncram_component.wren_a
wren_b => altsyncram:altsyncram_component.wren_b
q_a[0] <= altsyncram:altsyncram_component.q_a[0]
q_b[0] <= altsyncram:altsyncram_component.q_b[0]


|FEC|FEC_RAM_2PORTS:ram1|altsyncram:altsyncram_component
wren_a => altsyncram_1014:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => altsyncram_1014:auto_generated.wren_b
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_1014:auto_generated.data_a[0]
data_b[0] => altsyncram_1014:auto_generated.data_b[0]
address_a[0] => altsyncram_1014:auto_generated.address_a[0]
address_a[1] => altsyncram_1014:auto_generated.address_a[1]
address_a[2] => altsyncram_1014:auto_generated.address_a[2]
address_a[3] => altsyncram_1014:auto_generated.address_a[3]
address_a[4] => altsyncram_1014:auto_generated.address_a[4]
address_a[5] => altsyncram_1014:auto_generated.address_a[5]
address_a[6] => altsyncram_1014:auto_generated.address_a[6]
address_a[7] => altsyncram_1014:auto_generated.address_a[7]
address_b[0] => altsyncram_1014:auto_generated.address_b[0]
address_b[1] => altsyncram_1014:auto_generated.address_b[1]
address_b[2] => altsyncram_1014:auto_generated.address_b[2]
address_b[3] => altsyncram_1014:auto_generated.address_b[3]
address_b[4] => altsyncram_1014:auto_generated.address_b[4]
address_b[5] => altsyncram_1014:auto_generated.address_b[5]
address_b[6] => altsyncram_1014:auto_generated.address_b[6]
address_b[7] => altsyncram_1014:auto_generated.address_b[7]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_1014:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_1014:auto_generated.q_a[0]
q_b[0] <= altsyncram_1014:auto_generated.q_b[0]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|FEC|FEC_RAM_2PORTS:ram1|altsyncram:altsyncram_component|altsyncram_1014:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_b[0] => ram_block1a0.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
clock0 => ram_block1a0.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_b[0] => ram_block1a0.PORTBDATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_b[0] <= ram_block1a0.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_b => ram_block1a0.PORTBWE


